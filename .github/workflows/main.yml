name: Test, Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        name: testingvk

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Deploy to VPS and Run Setup Commands
      env:
        SSH_PASSWORD: ${{ secrets.SERVER_SSH_PASSWORD }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        REMOTE_TARGET: ${{ secrets.REMOTE_TARGET }}
      run: |
        mkdir -p ~/.ssh/
        ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts
        
        # Sync files using rsync
        sshpass -p "$SSH_PASSWORD" rsync -avzc --delete --exclude '.git' -e "ssh -o StrictHostKeyChecking=no" ./ $REMOTE_USER@$REMOTE_HOST:$REMOTE_TARGET
        
        # Run setup commands on VPS
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
          cd $REMOTE_TARGET
          
          # Ensure the remote repo is up to date with local changes
          if [ -d ".git" ]; then
            git reset --hard HEAD  # Reset any local changes
            git pull origin main    # Pull the latest changes from the remote repo
          else
            git init               # Initialize a git repository if not already present
            git remote add origin git@your-remote-repo-url.git
            git fetch
            git checkout -b main
            git pull origin main
          fi

          # Any additional commands like npm install, pm2 restart, etc.
          mkdir folder_by_actions
          cd folder_by_actions
          touch file_by_actions
        EOF
